/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Payee as PrismaPayee } from "@prisma/client";

export class PayeeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PayeeCountArgs, "select">): Promise<number> {
    return this.prisma.payee.count(args);
  }

  async payees<T extends Prisma.PayeeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayeeFindManyArgs>
  ): Promise<PrismaPayee[]> {
    return this.prisma.payee.findMany<Prisma.PayeeFindManyArgs>(args);
  }
  async payee<T extends Prisma.PayeeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayeeFindUniqueArgs>
  ): Promise<PrismaPayee | null> {
    return this.prisma.payee.findUnique(args);
  }
  async createPayee<T extends Prisma.PayeeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayeeCreateArgs>
  ): Promise<PrismaPayee> {
    return this.prisma.payee.create<T>(args);
  }
  async updatePayee<T extends Prisma.PayeeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayeeUpdateArgs>
  ): Promise<PrismaPayee> {
    return this.prisma.payee.update<T>(args);
  }
  async deletePayee<T extends Prisma.PayeeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayeeDeleteArgs>
  ): Promise<PrismaPayee> {
    return this.prisma.payee.delete(args);
  }
}
