/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ComplaintCreateNestedManyWithoutCustomersInput } from "./ComplaintCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { CustomerServiceCreateNestedManyWithoutCustomersInput } from "./CustomerServiceCreateNestedManyWithoutCustomersInput";
import { RentalCreateNestedManyWithoutCustomersInput } from "./RentalCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ComplaintCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ComplaintCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ComplaintCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  complaints?: ComplaintCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerServiceCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => CustomerServiceCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => CustomerServiceCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  customerServices?: CustomerServiceCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => RentalCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => RentalCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => RentalCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  rentals?: RentalCreateNestedManyWithoutCustomersInput;
}

export { CustomerCreateInput as CustomerCreateInput };
