/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ComplaintUpdateManyWithoutCustomersInput } from "./ComplaintUpdateManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { CustomerServiceUpdateManyWithoutCustomersInput } from "./CustomerServiceUpdateManyWithoutCustomersInput";
import { RentalUpdateManyWithoutCustomersInput } from "./RentalUpdateManyWithoutCustomersInput";

@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ComplaintUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ComplaintUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ComplaintUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  complaints?: ComplaintUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerServiceUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => CustomerServiceUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => CustomerServiceUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  customerServices?: CustomerServiceUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => RentalUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => RentalUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => RentalUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  rentals?: RentalUpdateManyWithoutCustomersInput;
}

export { CustomerUpdateInput as CustomerUpdateInput };
